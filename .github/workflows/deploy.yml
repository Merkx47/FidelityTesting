# GitHub Actions workflow for deploying FidelityTesting to AWS Lambda
name: Deploy FidelityTesting to AWS Lambda

# Trigger the workflow on push to main branch or manual dispatch
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    # Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Configure AWS credentials from GitHub secrets
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    # Login to Amazon ECR to push Docker images
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    
    # Build, tag, and push the Docker image to ECR
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: fidelity-testing-lambda
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build the Docker image
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        
        # Push the image with the commit SHA as tag
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
        # Also tag and push as 'latest' for easy reference
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        
        echo "Image pushed to $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    
    # Update the Lambda function with the new image
    - name: Update Lambda function
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: fidelity-testing-lambda
        IMAGE_TAG: ${{ github.sha }}
        LAMBDA_FUNCTION_NAME: fidelity-testing-function
      run: |
        # Update the Lambda function code with the new image
        aws lambda update-function-code \
          --function-name $LAMBDA_FUNCTION_NAME \
          --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
        # Wait for the update to complete
        aws lambda wait function-updated \
          --function-name $LAMBDA_FUNCTION_NAME
        
        echo "Lambda function $LAMBDA_FUNCTION_NAME updated successfully"